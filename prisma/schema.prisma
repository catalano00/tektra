generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Project {
  currentStatus                String
  projectId                    String      @id
  client                       String
  streetaddress                String
  city                         String
  state                        String
  zipcode                      Int
  contractAmount               Decimal     @db.Decimal(15, 2)
  contingency                  Decimal     @db.Decimal(15, 2)
  totalContract                Decimal     @db.Decimal(15, 2)
  buildableSqFt                Int?
  estimatedPanelSqFt           Int?
  expectedDrawingStart         DateTime?
  expectedProductionStart      DateTime?
  expectedProductionCompletion DateTime?
  notes                        String?
  updatedAt                    DateTime? @updatedAt @default (now())
  components                   Component[]

  @@map("projects")
}

model TimeEntry {
  id            String    @id @default(cuid())
  componentId   String
  componentCode String
  warehouse     String
  workstation   String
  teamLead      String
  process       Process
  status        Status
  duration      Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  component     Component @relation(fields: [componentId], references: [id])

  @@unique([componentId, process])
}

model Component {
  id                   String      @id @default(uuid())
  componentId          String
  componentType        String
  currentStatus        String
  lastCompletedProcess String?
  nextProcess          String?
  processStatus        String?
  percentComplete      Int?
  completedAt          DateTime?
  designUrl            String?
  workstation          String?
  teamLead             String?
  dateshipped          DateTime?
  datedelivered        DateTime?
  componentsqft        Int
  projectId            String
  project              Project     @relation(fields: [projectId], references: [projectId])
  partList             Part[]
  sheathing            Sheathing?
  timeEntries          TimeEntry[]
}

model Part {
  id          String    @id @default(cuid())
  componentId String
  label       String
  size        String
  count       Int
  cutLength   String
  component   Component @relation(fields: [componentId], references: [id])
}

model Sheathing {
  id          String    @id @default(cuid())
  componentId String    @unique
  panelArea   String
  panelCount  Float
  component   Component @relation(fields: [componentId], references: [id])
}

enum Process {
  Cut
  Assemble
  Fly
  Ship
}

enum Status {
  pending
  complete
  paused
}
